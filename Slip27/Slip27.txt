Q1>Write a Java Program to implement Abstract Factory Pattern for Shape interface
=>
interface Shape 
{ 
void draw(); 
} 
class RoundedRectangle implements Shape 
{ 
 public void draw() 
 { 
 System.out.println(" Inside RR"); 
 } 
} 
class RoundedSquare implements Shape 
{ 
 public void draw() 
 { 
 System.out.println(" Inside RS"); 
 } 
} 
class Rectangle implements Shape 
{ 
 public void draw() 
 { 
 System.out.println(" Inside Simple R"); 
 } 
} 

class Square implements Shape 
{ 
 public void draw() 
 { 
 System.out.println(" Inside Simple Sq"); 
 } 
} 

abstract class AbstractFactory 
{ 
 abstract Shape getShape( String st); 
} 

class ShapeFactory extends AbstractFactory 
{ 
 public Shape getShape( String st) 
 { 
 if(st.equalsIgnoreCase("Rectangle")) 
 { return new Rectangle();} 
 else if(st.equalsIgnoreCase("Square")) 
 { return new Square();} 
 return null; 
 } 
}

class RoundedShapeFactory extends AbstractFactory 
{ 
 public Shape getShape( String st) 
 { 
 if(st.equalsIgnoreCase("Rectangle")) 
 { return new RoundedRectangle();} 
 else if(st.equalsIgnoreCase("Square")) 
 { return new RoundedSquare();} 
 return null; 
 } 
} 

class FactoryProducer 
{ 
 public static AbstractFactory getFactory(boolean rounded) 
 { 
 if (rounded) 
 { return new RoundedShapeFactory();} 
 else 
 { return new ShapeFactory();} 
 } 
} 

public class Main 
{ 
 public static void main(String[]args) 
 { 
 AbstractFactory shapeFactory=FactoryProducer.getFactory(false); 
 Shape shape1=shapeFactory.getShape("Rectangle"); 
 shape1.draw(); 
 Shape shape2=shapeFactory.getShape("SQuare"); 
 shape2.draw(); 
 
 AbstractFactory shapeFactory1=FactoryProducer.getFactory(true); 
 Shape shape3=shapeFactory1.getShape("REctangle"); 
 shape3.draw(); 
 
 Shape shape4=shapeFactory1.getShape("square"); 
 shape4.draw(); 
 } 
}

Q2>Write a python program to implement Polynomial Linear Regression for given dataset
=>
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

data=pd.read_csv("ass6_data.csv")
print(data)

x=data.iloc[:,1:2].values
y=data.iloc[:,2].values

print(x)
print(y)

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.25)

lr=LinearRegression()
lr.fit(xtrain,ytrain)
ypred=lr.predict(xtest)

plt.scatter(x,y,c="red")
plt.plot(x,lr.predict(x),c="green")
plt.show()

from sklearn.preprocessing import PolynomialFeatures
pr=PolynomialFeatures(degree=4)
xpoly=pr.fit_transform(x)
poreg=LinearRegression()
poreg.fit(xpoly,y)

plt.scatter(x,y,c="red")
plt.plot(x,poreg.predict(pr.fit_transform(x)),c="green")
plt.show()


print(lr.predict([[5.5]]))
print(poreg.predict(pr.fit_transform([[5.5]])))

Q3>Create your Django app in which after running the server, you should see on the browser,
the text “Hello! I am learning Django”, which you defined in the index view.
